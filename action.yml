name: "lvCICD"
author: "LV-APT"
description: "CICD Action used for LabVIEW Users"
branding:
  icon: "tool"
  color: "green"

inputs:
  LabVIEW_Version:
    description: "LabVIEW Version Used"
    required: false
    default: "2019"
  Architecture:
    description: "32bit/64bit Verion of LabVIEW Used"
    required: false
    default: "x86"
  Operation:
    description: "The operation of lvCICD"
    required: false
    default: "lvecho"
  Parameter1:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter2:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter3:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter4:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter5:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter6:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter7:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter8:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter9:
    description: "Parameter of lvCICD"
    required: false
    default: ""
  Parameter10:
    description: "Parameter of lvCICD"
    required: false
    default: ""
outputs:
  output:
    description: "Output of lvCICD"
    value: ${{ steps.lvCICDScript.outputs.outputV }}
runs:
  using: "composite"

  steps:
    - name: "Checkout-lvCICD-Action"
      uses: actions/checkout@v2.4.2

    # - name: "Show working dir"
    #   run: pwd
    #   shell: powershell

    - name: "Run-lvCICD-Scripts"
      id: lvCICDScript
      run:
        $outputV = `
        ${{ github.action_path }}\lvCICD.ps1 `
        ${{ inputs.LabVIEW_Version }} `
        ${{ inputs.Architecture }} `
        ${{ inputs.Operation }} `
        ${{ inputs.Parameter1 }} `
        ${{ inputs.Parameter2 }} `
        ${{ inputs.Parameter3 }} `
        ${{ inputs.Parameter4 }} `
        ${{ inputs.Parameter5 }} `
        ${{ inputs.Parameter6 }} `
        ${{ inputs.Parameter7 }} `
        ${{ inputs.Parameter8 }} `
        ${{ inputs.Parameter9 }} `
        ${{ inputs.Parameter10 }}
        echo '::set-output name=outputV::$outputV'
        echo "::set-output name=outputV::$outputV"
      shell: powershell
